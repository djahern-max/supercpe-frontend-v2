{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://nh.supercpe.com';\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging\napiClient.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napiClient.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$response3, _error$response4, _error$response4$data;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 404) {\n    throw new Error('Resource not found (404)');\n  } else if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 500) {\n    throw new Error('Server error. Please try again later.');\n  } else if (error.code === 'ECONNABORTED') {\n    throw new Error('Request timeout. Please check your connection.');\n  }\n  throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || error.message || 'An error occurred');\n});\nexport const apiService = {\n  // CPA endpoints\n  async getCPA(licenseNumber) {\n    const response = await apiClient.get(`/api/cpas/${licenseNumber}`);\n    return response.data;\n  },\n  async getCPAStats() {\n    const response = await apiClient.get('/api/cpas/stats/summary');\n    return response.data;\n  },\n  // Compliance endpoints\n  async getCompliance(licenseNumber) {\n    const response = await apiClient.get(`/api/compliance/${licenseNumber}`);\n    return response.data;\n  },\n  // Certificate analysis (FREE tier)\n  async analyzeCertificate(licenseNumber, file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await apiClient.post(`/api/admin/analyze-certificate/${licenseNumber}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      timeout: 60000 // 60 seconds for AI analysis\n    });\n    return response.data;\n  },\n  // Save certificate (PREMIUM tier)\n  async saveReviewedCertificate(licenseNumber, file, reviewData) {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    // Add all review data to form\n    Object.keys(reviewData).forEach(key => {\n      formData.append(key, reviewData[key]);\n    });\n    const response = await apiClient.post(`/api/admin/save-reviewed-certificate/${licenseNumber}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // CPE records (PREMIUM tier)\n  async getCPERecords(licenseNumber) {\n    const response = await apiClient.get(`/api/admin/cpe-records/${licenseNumber}`);\n    return response.data;\n  },\n  // Payments & subscriptions\n  async getSubscriptionStatus(licenseNumber) {\n    const response = await apiClient.get(`/api/payments/subscription-status/${licenseNumber}`);\n    return response.data;\n  },\n  async getPricingPlans() {\n    const response = await apiClient.get('/api/payments/pricing');\n    return response.data;\n  },\n  async createPaymentIntent(paymentData) {\n    const response = await apiClient.post('/api/payments/create-payment-intent', paymentData);\n    return response.data;\n  },\n  // Health check\n  async healthCheck() {\n    const response = await apiClient.get('/health');\n    return response.data;\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","_error$response","_error$response2","_error$response3","_error$response4","_error$response4$data","data","message","status","Error","code","detail","apiService","getCPA","licenseNumber","get","getCPAStats","getCompliance","analyzeCertificate","file","formData","FormData","append","post","saveReviewedCertificate","reviewData","Object","keys","forEach","key","getCPERecords","getSubscriptionStatus","getPricingPlans","createPaymentIntent","paymentData","healthCheck"],"sources":["/Users/ryze.ai/projects/supercpe-frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://nh.supercpe.com';\n\nconst apiClient = axios.create({\n    baseURL: API_BASE_URL,\n    timeout: 30000,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Request interceptor for logging\napiClient.interceptors.request.use(\n    (config) => {\n        console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Response interceptor for error handling\napiClient.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        console.error('API Error:', error.response?.data || error.message);\n\n        if (error.response?.status === 404) {\n            throw new Error('Resource not found (404)');\n        } else if (error.response?.status === 500) {\n            throw new Error('Server error. Please try again later.');\n        } else if (error.code === 'ECONNABORTED') {\n            throw new Error('Request timeout. Please check your connection.');\n        }\n\n        throw new Error(error.response?.data?.detail || error.message || 'An error occurred');\n    }\n);\n\nexport const apiService = {\n    // CPA endpoints\n    async getCPA(licenseNumber) {\n        const response = await apiClient.get(`/api/cpas/${licenseNumber}`);\n        return response.data;\n    },\n\n    async getCPAStats() {\n        const response = await apiClient.get('/api/cpas/stats/summary');\n        return response.data;\n    },\n\n    // Compliance endpoints\n    async getCompliance(licenseNumber) {\n        const response = await apiClient.get(`/api/compliance/${licenseNumber}`);\n        return response.data;\n    },\n\n    // Certificate analysis (FREE tier)\n    async analyzeCertificate(licenseNumber, file) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        const response = await apiClient.post(\n            `/api/admin/analyze-certificate/${licenseNumber}`,\n            formData,\n            {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n                timeout: 60000, // 60 seconds for AI analysis\n            }\n        );\n        return response.data;\n    },\n\n    // Save certificate (PREMIUM tier)\n    async saveReviewedCertificate(licenseNumber, file, reviewData) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        // Add all review data to form\n        Object.keys(reviewData).forEach(key => {\n            formData.append(key, reviewData[key]);\n        });\n\n        const response = await apiClient.post(\n            `/api/admin/save-reviewed-certificate/${licenseNumber}`,\n            formData,\n            {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            }\n        );\n        return response.data;\n    },\n\n    // CPE records (PREMIUM tier)\n    async getCPERecords(licenseNumber) {\n        const response = await apiClient.get(`/api/admin/cpe-records/${licenseNumber}`);\n        return response.data;\n    },\n\n    // Payments & subscriptions\n    async getSubscriptionStatus(licenseNumber) {\n        const response = await apiClient.get(`/api/payments/subscription-status/${licenseNumber}`);\n        return response.data;\n    },\n\n    async getPricingPlans() {\n        const response = await apiClient.get('/api/payments/pricing');\n        return response.data;\n    },\n\n    async createPaymentIntent(paymentData) {\n        const response = await apiClient.post('/api/payments/create-payment-intent', paymentData);\n        return response.data;\n    },\n\n    // Health check\n    async healthCheck() {\n        const response = await apiClient.get('/health');\n        return response.data;\n    },\n};\n\nexport default apiService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}